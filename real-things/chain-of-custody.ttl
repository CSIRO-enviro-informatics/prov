# baseURI: http://realprov.org/ns/custody
# imports: http://purl.org/dc/terms/
# imports: http://www.w3.org/2006/time
# imports: http://www.w3.org/ns/prov
# prefix: cust

@prefix cust: <http://realprov.org/ns/custody#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://realprov.org/ns/custody>
  rdf:type owl:Ontology ;
  dcterms:created "2018-01-03"^^xsd:date ;
  dcterms:creator <http://registry.it.csiro.au/sandbox/csiro/person/Simon-Cox> ;
  dcterms:license <http://registry.it.csiro.au/licence/csiro-open-source-software-v1.0> ;
  rdfs:comment """An ontology for tracking chain-of-custody of an entity, usually a physical one. 
Status: experimental""" ;
  rdfs:label "Chain of custody ontology" ;
  owl:imports dcterms: ;
  owl:imports <http://www.w3.org/2006/time> ;
  owl:imports <http://www.w3.org/ns/prov> ;
.
cust:Custodian
  rdf:type owl:Class ;
  rdfs:label "Agent who has custody of an Entity" ;
  rdfs:subClassOf prov:Agent ;
.
cust:CustodyInterval
  rdf:type owl:Class ;
  rdfs:comment "CustodyInterval is modeled as a subclass of prov:Activity because of its association with a prov:Agent, and used a prov:Entity" ;
  rdfs:comment "CustodyInterval is modeled as a subclass of time:ProperInterval because of its ordering relations with other CustodyIntervals" ;
  rdfs:label "An interval during which a specified entity is in custody of a nominated agent" ;
  rdfs:subClassOf time:ProperInterval ;
  rdfs:subClassOf prov:Activity ;
  rdfs:subClassOf [
      rdf:type owl:Class ;
      owl:unionOf (
          [
            rdf:type owl:Restriction ;
            owl:onClass cust:CustodyInterval ;
            owl:onProperty time:intervalMeets ;
            owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
          ]
          [
            rdf:type owl:Restriction ;
            owl:onClass cust:CustodyInterval ;
            owl:onProperty time:intervalOverlaps ;
            owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
          ]
        ) ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Class ;
      owl:unionOf (
          [
            rdf:type owl:Restriction ;
            owl:onClass cust:CustodyInterval ;
            owl:onProperty time:intervalMetBy ;
            owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
          ]
          [
            rdf:type owl:Restriction ;
            owl:onClass cust:CustodyInterval ;
            owl:onProperty time:intervalOverlappedBy ;
            owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
          ]
        ) ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Class ;
      owl:unionOf (
          [
            rdf:type owl:Restriction ;
            owl:onClass cust:CustodyTransfer ;
            owl:onProperty time:hasBeginning ;
            owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
          ]
          [
            rdf:type owl:Restriction ;
            owl:onClass cust:CustodyTransfer ;
            owl:onProperty time:intervalStartedBy ;
            owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
          ]
        ) ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Class ;
      owl:unionOf (
          [
            rdf:type owl:Restriction ;
            owl:onClass cust:CustodyTransfer ;
            owl:onProperty time:hasEnd ;
            owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
          ]
          [
            rdf:type owl:Restriction ;
            owl:onClass cust:CustodyTransfer ;
            owl:onProperty time:intervalFinishedBy ;
            owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
          ]
        ) ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty cust:hasCustodyOf ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onClass cust:Custodian ;
      owl:onProperty prov:wasAssociatedWith ;
      owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
    ] ;
.
cust:CustodyTransfer
  rdf:type owl:Class ;
  rdfs:comment """A transfer of custody is modeled as a subclass of time:TemporalEntity. 
It may be considered to be instantaneous (i.e. a time:Instant) in which case it is the time:hasEnd of one custody interval and time:hasBeginning of another.
Else a transfer may take a finite duration (i.e. a time:Interval) in which case the Entity is in joint custody during the transfer interval. """ ;
  rdfs:label "Transfer of custody from one agent to another" ;
  rdfs:subClassOf time:TemporalEntity ;
  rdfs:subClassOf prov:Activity ;
  rdfs:subClassOf [
      rdf:type owl:Class ;
      owl:unionOf (
          [
            rdf:type owl:Restriction ;
            owl:hasValue time:Instant ;
            owl:onProperty rdf:type ;
          ]
          [
            rdf:type owl:Class ;
            owl:intersectionOf (
                [
                  rdf:type owl:Restriction ;
                  owl:hasValue time:ProperInterval ;
                  owl:onProperty rdf:type ;
                ]
                [
                  rdf:type owl:Restriction ;
                  owl:onClass cust:CustodyInterval ;
                  owl:onProperty time:intervalFinishes ;
                  owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                ]
                [
                  rdf:type owl:Restriction ;
                  owl:onClass cust:CustodyInterval ;
                  owl:onProperty time:intervalStarts ;
                  owl:qualifiedCardinality "1"^^xsd:nonNegativeInteger ;
                ]
              ) ;
          ]
        ) ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty cust:newCustodian ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty cust:oldCustodian ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty cust:transfersCustodyOf ;
    ] ;
.
cust:hasCustodyOf
  rdf:type owl:ObjectProperty ;
  rdfs:comment "An explicit property to indicate the custody entity is required because the object of a generic prov:used predicate might play other roles in the CustodyInterval" ;
  rdfs:domain cust:CustodyInterval ;
  rdfs:range prov:Entity ;
  rdfs:subPropertyOf prov:used ;
.
cust:inCustodyOf
  rdf:type owl:ObjectProperty ;
  owl:inverseOf cust:hasCustodyOf ;
.
cust:newCustodian
  rdf:type owl:ObjectProperty ;
  rdfs:domain cust:CustodyTransfer ;
  rdfs:label "Custodian of the entity after the transfer" ;
  rdfs:range cust:Custodian ;
  rdfs:subPropertyOf prov:wasAssociatedWith ;
.
cust:oldCustodian
  rdf:type owl:ObjectProperty ;
  rdfs:domain cust:CustodyTransfer ;
  rdfs:label "Custodian of the entity before the transfer" ;
  rdfs:range cust:Custodian ;
  rdfs:subPropertyOf prov:wasAssociatedWith ;
.
cust:transfersCustodyOf
  rdf:type owl:ObjectProperty ;
  rdfs:comment "Link to the entity whose custody is being transferred" ;
  rdfs:domain cust:CustodyTransfer ;
  rdfs:range prov:Entity ;
  rdfs:subPropertyOf prov:used ;
.
